type Query {
    fetchAllProfessors:[Professor]
    fetchProfessorById(id:Int!):Professor
    fetchProfessorByName(fullName:String!):[Professor]

    fetchAllTodos:[Todo]
    fetchTodoById(id:Int!):Todo

    fetchAllStudents:[Student]
    fetchStudentById(id:Int!):Student
    fetchStudentByName(fullName:String!):[Student]

    fetchAllStudentGrades:[StudentGrade]
    fetchStudentGradeById(id:Int!):StudentGrade

    fetchAllGrades:[Grade]
    fetchGradeById(id:Int!):Grade

    fetchAllSubjects:[Subject]
    fetchSubjectById(id:Int!):Subject
    fetchSubjectByName(name:String!):[Subject]
}

type Professor {
    professorAiid : ID
    fullName : String
    email : String
    phone : String
    todos : [Todo]
    subjects : [Subject]
}

type Todo {
    todoAiid : ID,
    description : String
    professor : Professor
}

type Student {
    studentAiid : ID
    fullName : String
    email : String
    phone : String
    registrations : [StudentGrade]
}

type StudentGrade {
    registrationAiid : ID
    student : Student
    grade : Grade
    enrollments : [Enrollment]
}

type Grade {
    gradeAiid : ID
    gradeName : String
}

type Enrollment {
    enrollmentAiid : ID
    studentGrade : StudentGrade
    subject : Subject
    assignments : [Assignment]
}

type Subject {
    subjectAiid : ID
    subjectName : String
    professors : [Professor]
    enrollments : [Enrollment]

}

type Assignment {
    assignementAiid : ID
    enrollment : Enrollment
    todo : Todo
    isDone : Boolean
}

type Mutation {
    addStudent(student : StudentInput): Student
    addProfessor(professor : ProfessorInput): Professor
    addGrade(grade : GradeInput): Grade
    addTodo(todo : TodoInput): Todo
}
input ProfessorInput {
    professorAiid : ID
    fullName : String
    email : String
    phone : String
}
input StudentInput {
    studentAiid : ID
    fullName : String
    email : String
    phone : String
}

input GradeInput {
    gradeAiid : ID
    gradeName : String
}

input TodoInput {
    todoAiid : ID
    description : String
    #    professor : ProfessorInput
}
