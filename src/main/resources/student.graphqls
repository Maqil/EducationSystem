#type User {
#    id: ID!
#    name: String!
#    email: String
#    password: String
#}

input AuthData {
    email: String!
    password: String!
}

type Mutation {

    addStudent(student : StudentInput): Student
    addProfessor(professor : ProfessorInput): Professor
    addSubject(subject : SubjectInput): Subject
    addGrade(grade : GradeInput): Grade
    addTodo(todo : TodoInput): Todo
}

type Query {
    fetchAllAdmins:[Admin]

    fetchAllProfessors:[Professor]
    fetchProfessorById(id:Int!):Professor
    fetchProfessorByName(fullName:String!):[Professor]

    fetchAllTodos:[Todo]
    fetchTodoById(id:Int!):Todo

    fetchAllStudents:[Student]
    fetchStudentById(id:Int!):Student
    fetchStudentByName(fullName:String!):[Student]

    fetchAllStudentGrades:[StudentGrade]
    fetchStudentGradeById(id:Int!):StudentGrade

    fetchAllGrades:[Grade]
    fetchGradeById(id:Int!):Grade

    fetchAllSubjects:[Subject]
    fetchSubjectById(id:Int!):Subject
    fetchSubjectByName(name:String!):[Subject]
}

type Admin {
    adminAiid : ID
    adminName : String
    professorSet: [Professor]
    studentSet : [Student]
    subjectSet : [Subject]
    gradeSet : [Grade]
}

type Professor {
    professorAiid : ID
    fullName : String
    email : String
    phone : String
    todos : [Todo]
    #    subjects : [Subject]
}

type Todo {
    todoAiid : ID,
    description : String
    professor : Professor
    subject : Subject
}

type Student {
    studentAiid : ID
    fullName : String
    email : String
    phone : String
    registrations : [StudentGrade]
}

type StudentGrade {
    registrationAiid : ID
    student : Student
    grade : Grade
    assignments : [Assignment]
    #    enrollments : [Enrollment]
}

type Grade {
    gradeAiid : ID
    gradeName : String
}

#type Enrollment {
#    enrollmentAiid : ID
#    studentGrade : StudentGrade
#    subject : Subject
#    assignments : [Assignment]
#}

type Subject {
    subjectAiid : ID
    subjectName : String
    #    professors : [Professor]
    #    enrollments : [Enrollment]
}

type Assignment {
    assignementAiid : ID
    #    enrollment : Enrollment
    todo : Todo
    isDone : Boolean
}

#type SigninInput {
#    token: String
#    user: User
#}

input ProfessorInput {
    professorAiid : ID
    fullName : String
    email : String
    phone : String
}
input StudentInput {
    studentAiid : ID
    fullName : String
    email : String
    phone : String
}

input GradeInput {
    gradeAiid : ID
    gradeName : String
}

input SubjectInput {
    subjectAiid : ID
    subjectName : String
}

input TodoInput {
    todoAiid : ID
    description : String
#    professor : ProfessorInput
#    subject : SubjectInput
}
